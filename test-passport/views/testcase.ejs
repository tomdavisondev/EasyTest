
<body>
	<section class="sidebar-content ignore-clicks">
		<div class="container-fluid">
			<div class="row align-items-center">
				<div class="col-md-6">
					<% let testcase = project.testcases.find(({ name }) => name === testcasename) %>
					<h1 class="mt-6" id="title-text" onclick="editTitle()">
						<%= testcasename %>
					</h1>
					<form id="title-form" class="d-none" action="/projects/<%= project.projectname %>/<%= typeof testcasename != 'undefined' ? testcasename : '' %>/updatetestcasetitle" method="POST">
						<textarea id="title-input" name="title"></textarea>
						<button type="submit" class="btn btn-primary" id="title-save-button">Save</button>
						<button type="button" value="Cancel" id="title-cancel-button" onclick="cancelTitleEdit()" class="btn btn-secondary">Cancel</button>
					</form>
				</div>
				<div class="col-md-6 d-flex justify-content-end">
			
					<div class="nav-item dropdown no-arrow show">
					  <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						<span class="mr-2 d-none d-lg-inline text-gray-600 small">
						  <%= name.substring(0,1).toLocaleUpperCase() + name.substring(1); %>
						</span>
						<img class="img-profile rounded-circle" src="https://source.unsplash.com/WLUHO9A_xik/60x60">
					  </a>
					  <!-- Dropdown - User Information -->
					  <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="userDropdown">
						<a class="dropdown-item" href="#">
						  <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
						  Profile
						</a>
						<a class="dropdown-item" href="#">
						  <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
						  Settings
						</a>
						<a class="dropdown-item" href="#">
						  <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
						  Activity Log
						</a>
						<div class="dropdown-divider"></div>
						<a class="dropdown-item" href="/users/logout">
						  <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
						  Logout
						</a>
					  </div>
					</div>
				  </div>
				</div>

				<div class="row">
					<div class="col-md-8">
						<p id="description-text" onclick="editDescription()">
							<%= testcase.description %>
						</p>
						<form id="description-form" class="d-none"
							action="/projects/<%= project.projectname %>/<%= typeof testcasename != 'undefined' ? testcasename : '' %>/updatedescription"
							method="POST">
							<textarea id="description-input" name="description"></textarea>
							<button type="submit" class="btn btn-primary" id="description-save-button">Save</button>
							<button type="button" value="Cancel" id="description-cancel-button"
								onclick="canceldescriptionEdit()" class="btn btn-secondary">Cancel</button>
						</form>
					</div>
					<div class="col-md-2"></div>
				</div>

				<div class="row">
					<div class="col-md-8"><%- include('partials/messages') %></div>
					<div class="col-md-2"></div>
				</div>

				<div class="row">
					<div class="col-md-2" col-md-2>
						<!-- Coverage % + data -->
						<div class="card border-secondary text-center mb-2" style="max-width: 18rem; height: 125px">
							<div class="card-body text-secondary">
								<h5 class="card-title">Linked Requirements</h5>
								<h3 class="card-text">4</h3>
							</div>
						</div>
					</div>
				</div>

				<div class="row">
					<div class="col-md-8">
						<button class="btn btn-primary" data-toggle="collapse" data-target="#requirements-table">Requirements</button>
						<button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">New Requirement</button>
						<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
							<form class="px-4 py-3" action="/requirements/addrequirement" method="POST">
								<div class="form-group">
									<label for="requirementname">Name</label>
									<input
											type="requirementname"
											id="requirementname"
											name="requirementname"
											class="form-control"
											value="<%= typeof requirementname != 'undefined' ? requirementname : '' %>"
									/>
									<label for="requirementid">ID</label>
									<input
											type="requirementid"
											id="requirementid"
											name="requirementid"
											class="form-control"
											placeholder="Enter shorthand"
											value="<%= typeof requirementid != 'undefined' ? requirementid : '' %>"
									/>
								</div>
								<label for="projects">
									<input type="hidden" name="projects" value="<%= projects %>">
								</label>
								<label for="requirementlink">Links</label>
								<table id="projects-table" class="table table-bordered">
									<tbody>
									</tbody>
								  </table>
								<button type="submit" class="btn btn-primary btn-block">
									Register
								</button>
							</form>
							<div class="dropdown-divider"></div>
						</div>
						<div id="requirements-table" class="collapse">
							<form action="/projects/<%= project.projectname %>/<%= testcasename %>/addrequirements" method="POST" name="requirement-form">
								<table class="table table-bordered">
								  <thead>
									<tr>
									  <th scope="col" class="col-md-2">ID</th>
									  <th scope="col" class="col-md-6">Requirement Name</th>
									  <th scope="col" class="col-md-1">Linked</th>
									</tr>
								  </thead>
								  <tbody>
									<% requirements.forEach((requirement) => {
										let requirementLinked = false;
										  if (testcase.linkedrequirements.includes(requirement._id.toString())) {
											requirementLinked = true;
										  }
	
									  %>
									  
									  <tr class="<%= requirementLinked ? 'text-muted' : 'hover-color' %>">
										<th scope="row"><%= requirement.requirementid %></th>
										<td><%= requirement.requirementname %></td>
										<td>
										  <label>
											<input type="checkbox" name="selected-requirements[]" value="<%= requirement.requirementid %>" <%= requirementLinked ? 'checked' : '' %>>
										  </label>
										</td>
									  </tr>
									<% }) %>
								  </tbody>
								</table>
								<input type="hidden" name="selected-requirements" value="">
								<button type="button" class="btn btn-primary btn-block" onclick="submitSelectedRequirements()">Submit Selected Requirements</button>
							  </form>
						</div>
					</div>
				</div>
				

				<div class="row">
					<div class="col-md-8" col-md-8>
						<button class="btn btn-primary" data-toggle="collapse" data-target="#testcases-table">Test
							Cases</button>
						<button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton"
							data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">New Test Case</button>
						<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
							<form class="px-4 py-3" action="/projects/<%= project.projectname %>/addtestcase"
								method="POST">
								<div class="form-group">
									<label for="testcasename">Name</label>
									<input type="testcasename" id="testcasename" name="testcasename"
										class="form-control" placeholder="Test Case Name"
										value="<%= typeof testcasename != 'undefined' ? testcasename : '' %>" />
									<label for="testcasedescription">Description</label>
									<input type="testcasedescription" id="testcasedescription"
										name="testcasedescription" class="form-control"
										placeholder="This test aims to..."
										value="<%= typeof testcasedescription != 'undefined' ? testcasedescription : '' %>" />
								</div>
								<button type="submit" class="btn btn-primary btn-block">
									Add Test Case
								</button>
							</form>
							<div class="dropdown-divider"></div>
						</div>
						<div id="testcases-table" class="collapse">
							<table class="table table-bordered">
								<thead>
									<tr>
										<th scope="col" class="col-md-2">Name</th>
										<th scope="col" class="col-md-6">Description</th>
										<th scope="col" class="col-md-1">Edited Last</th>
									</tr>
								</thead>
								<tbody>
									<% testcases.forEach(function (testcases) { %>
										<tr class="hover-color"
											onclick="location.href='/project/<%= project.projectname %>/<%= testcases.name %>'">
											<th scope="row">
												<%= testcases.name %>
											</th>
											<td>
												<%= testcases.description %>
											</td>
											</td>
											<td></td>
										</tr>
										<% }) %>
								</tbody>
							</table>
						</div>
					</div>
				</div>

				<div class="drag-container">
				<% testcase.teststeps.forEach(function (teststep, i) { %>
					<div class="row" draggable="true" id="teststep<%=i%>">
						<div class="col-md-3" col-md-3>
							<!-- Coverage % + data -->
							<div class="card border-secondary mb-2" style="max-width: 18rem; height: 125px">
								<div class="card-body text-secondary">
									<h6 class="card-title">User Action</h6>
									<p class="card-text">
										<%= teststep.stepmethod %>
									</p>
								</div>
							</div>
						</div>
						<div class="col-md-3" col-md-3>
							<!-- Coverage % + data -->
							<div class="card border-secondary mb-2" style="max-width: 18rem; height: 125px">
								<div class="card-body text-secondary">
									<h6 class="card-title">Expected Result</h6>
									<p class="card-text">
										<%=teststep.stepexpected%>
									</p>
								</div>
							</div>
						</div>
						<div class="col-md-3" col-md-3>
							<!-- Coverage % + data -->
							<div class="card border-secondary mb-2" style="max-width: 18rem; height: 125px">
								<div class="card-body text-secondary">
									<h6 class="card-title">Actual Result</h6>
									<p class="card-text">
										<%=teststep.stepactual%>
									</p>
								</div>
							</div>
						</div>
						<div class="dropdown">
							<button type="button" class="btn btn-primary dropdown-toggle" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
								<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-circle" viewBox="0 0 16 16">
								  <path fill-rule="evenodd" d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v5.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V4.5z"></path>
								</svg>
							</button>
							<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
								<form id="delete-form" action="/projects/<%= project.projectname %>/<%= testcase.name %>/deleteteststep" method="POST">
									<input type="hidden" name="_method" value="DELETE">
									<input type="hidden" name="stepId" value="<%= teststep._id %>">
									<input type="hidden" name="stepIndex" value="<%= i %>">
									<button type="submit" class="dropdown-item">Delete</button>
								  </form>
								  <a class="dropdown-item" href="/projects/<%= project.projectname %>/<%= testcase.name %>/clone-step-here?stepId=<%= teststep._id %>&stepIndex=<%= i %>">Clone Here</a>
								  <a class="dropdown-item" onclick="editTestStep(<%=i%>)">Edit</a>
							  </div>							  
						</div>	

					<div class="row" id="teststepfield<%=i%>" style="display:none">
						<div class="col-md-10" col-md-10>
							<form
								action="/projects/<%= project.projectname %>/<%= typeof testcasename != 'undefined' ? testcasename : '' %>/updateteststep"
								method="POST">
								<input type="hidden" name="project" value="<%= project %>">
								<input type="hidden" name="projectId" value="<%= project._id %>">
								<input type="hidden" name="testcaseId" value="<%= testcase._id %>">
								<input type="hidden" name="stepId" value="<%= teststep._id %>">

								<div class="row">
									<div class="col-sm-4">
										<div class="form-group">
											<label for="updatedStepMethodField">Method</label>
											<textarea type="textarea" id="updatedStepMethodField"
												name="updatedStepMethodField" rows="4"
												class="form-control text-area-large"><%= teststep.stepmethod %></textarea>
										</div>
									</div>
									<div class="col-sm-4">
										<div class="form-group">
											<label for="updatedStepExpectedResultsField">Expected Results</label>
											<textarea type="textarea" id="updatedStepExpectedResultsField"
												name="updatedStepExpectedResultsField" rows="4"
												class="form-control text-area-large"><%= teststep.stepexpected %></textarea>
										</div>
									</div>
									<div class="col-sm-4">
										<div class="form-group">
											<label for="updatedStepActualResultsField">Actual Results</label>
											<textarea type="textarea" id="updatedStepActualResultsField"
												name="updatedStepActualResultsField" rows="4"
												class="form-control text-area-large"><%= teststep.stepactual%></textarea>
										</div>
									</div>
								</div>
								<button type="submit" class="btn btn-primary">Save</button>
								<button type="button" value="Cancel" id="teststepcancel"
									onclick="cancelTestStepEdit(<%=i%>)" class="btn btn-secondary">Cancel</button>
							</form>
						</div>
					</div>
				</div>
					<% }) %>
				</div>
				<div class="row">
					<div class="col-md-10" col-md-10>
						<form
							action="/projects/<%= project.projectname %>/<%= typeof testcasename != 'undefined' ? testcasename : '' %>/addteststep"
							method="POST">
							<div class="row">
								<div class="col-sm-4">
									<div class="form-group">
										<label for="newStep">Method</label>
										<textarea type="textarea" id="newStepMethodField"
											name="newStepMethodField" rows="4"
											class="form-control text-area-large"></textarea>
									</div>
								</div>
								<div class="col-sm-4">
									<div class="form-group">
										<label for="newStepExpectedResultsField">Expected Results</label>
										<textarea type="textarea" id="newStepExpectedResultsField"
											name="newStepExpectedResultsField" rows="4"
											class="form-control text-area-large"></textarea>
									</div>
								</div>
								<div class="col-sm-4">
									<div class="form-group">
										<label for="newStepActualResultsField">Actual Results</label>
										<textarea type="textarea" id="newStepActualResultsField"
											name="newStepActualResultsField" rows="4"
											class="form-control text-area-large"></textarea>
									</div>
								</div>
							</div>
							<button type="submit" class="btn btn-primary">Save</button>
						</form>
					</div>
				</div>
			</div>
		</div>
	</section>
	</main>
</body>

<script>
	function editTitle() {
		document.getElementById("title-text").style.display = "none";
		document.getElementById("title-form").style.display = "block";
		document.getElementById("title-save-button").style.display = "block";
		document.getElementById("title-cancel-button").style.display = "block";
		document.getElementById("title-form").classList.remove("d-none");
		document.getElementById("title-save-button").classList.remove("d-none");
		document.getElementById("title-cancel-button").classList.remove("d-none");
		document.getElementById("title-input").value = "<%=testcasename%>";
	}

	function cancelTitleEdit() {
		document.getElementById("title-text").style.display = "block";
		document.getElementById("title-form").style.display = "none";
		document.getElementById("title-save-button").style.display = "none";
	}

	function editDescription() {
		document.getElementById("description-text").style.display = "none";
		document.getElementById("description-form").style.display = "block";
		document.getElementById("description-save-button").style.display = "block";
		document.getElementById("description-cancel-button").style.display = "block";
		document.getElementById("description-form").classList.remove("d-none");
		document.getElementById("description-save-button").classList.remove("d-none");
		document.getElementById("description-cancel-button").classList.remove("d-none");
		document.getElementById("description-input").value = "<%=testcase.description%>";
	}

	function canceldescriptionEdit() {
		document.getElementById("description-text").style.display = "block";
		document.getElementById("description-form").style.display = "none";
		document.getElementById("description-save-button").style.display = "none";
	}

	function editTestStep(stepNumber) {
		document.getElementById("teststepfield" + stepNumber).style.display = "flex";
	}
	function cancelTestStepEdit(stepNumber) {
		document.getElementById("teststepfield" + stepNumber).style.display = "none";
	}

	// get all the rows in the table
	const rows = document.querySelectorAll("div.row[draggable=true][id^='teststep']");

	// loop through the rows and add event listeners
	rows.forEach((row, index) => {
	  // add a dragstart event listener to the row
	  row.addEventListener("dragstart", dragStart);
	
	  // add a dragover event listener to the row
	  row.addEventListener("dragover", dragOver);
	
	  // add a dragend event listener to the row
	  row.addEventListener("dragend", dragEnd);

	  row.dataset.index = index;
	});

	let dragSrcEl = null;

	function dragStart(e) {
	  // store a reference to the row being dragged
	  dragSrcEl = this;
	
	  // set the data for the drag event (in this case, just the row index)
	  e.dataTransfer.setData("text/plain", this.rowIndex);
	
	  // add a class to the row being dragged to style it
	  this.classList.add("dragging");
	}
	
	function dragOver(e) {
	  // prevent the default action of the dragover event
	  e.preventDefault();
	
	  // get the row being dragged over
	  const dragOverEl = this;
	
	  // if the row being dragged over is not the same as the row being dragged
	  if (dragOverEl !== dragSrcEl) {
	    // get the parent element of the rows (the table body)
	    const tbody = dragSrcEl.parentNode;
	
	    // get the index of the row being dragged
	    const sourceIndex = dragSrcEl.rowIndex;
	
	    // get the index of the row being dragged over
	    const targetIndex = dragOverEl.rowIndex;
	
	    // insert the row being dragged before the row being dragged over
	    if (sourceIndex < targetIndex) {
	      tbody.insertBefore(dragSrcEl, dragOverEl.nextSibling);
	    }
	    // insert the row being dragged after the row being dragged over
	    else {
	      tbody.insertBefore(dragSrcEl, dragOverEl);
	    }
	  }
	}
	
	function dragEnd(e) {
	  // remove the dragging class from the row being dragged
	  this.classList.remove("dragging");
		
	  // get the index of the row being dropped
	  const fromIndex = Number(this.dataset.index);
		
	  // get the index of the row where the dropped row should be inserted
	  let toIndex;
	  const rows = document.querySelectorAll("div.row[draggable=true][id^='teststep']");
	  rows.forEach((row, index) => {
	    const rect = row.getBoundingClientRect();
	    if (e.clientY > rect.top && e.clientY < rect.bottom) {
	      toIndex = index;
	    }
	    // set the dataset.index property for all rows
	    row.dataset.index = index;
	  });
  
	  // if the row was dropped below all other rows, set the toIndex to the last index
	  if (toIndex === undefined) {
	    toIndex = rows.length - 1;
	  }
  
	  console.log("toIndex: " + toIndex + " From Index " + fromIndex);
	  //TODO: Think about test case update workflow. Does not persist to server yet, but could with to and from index
  
	  // move the row to its new position in the list
	  const parent = this.parentNode;
	  const nextSibling = parent.children[toIndex + 1];
	  parent.insertBefore(this, nextSibling);
  
	  // update the index of each row
	  rows.forEach((row, index) => {
	    row.dataset.index = index;
	  });
	}
		


</script>